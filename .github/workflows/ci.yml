name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install-build-lint-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-node_modules
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **/node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-node_modules-${{ hashFiles('yarn.lock') }}

    - name: Install dependencies
      if: steps.yarn-node_modules.outputs.cache-hit != 'true'
      run: yarn reinstall

    - uses: actions/cache@v2
      id: libs
      with:
        path: |
          **/lib
          **/*.tsbuildinfo
        key: ${{ runner.os }}-${{ matrix.node-version }}-lib-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/tsconfig.json') }}-${{ hashFiles('**/src') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-lib-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/tsconfig.json') }}-
          ${{ runner.os }}-${{ matrix.node-version }}-lib-${{ hashFiles('yarn.lock') }}-

    - name: Build All
      if: steps.libs.outputs.cache-hit != 'true'
      run: yarn build --verbose

    - name: Lint All
      run: yarn lint

    - name: Test Praisal & report coverage
      uses: paambaati/codeclimate-action@v2.6.0
      env:
        CC_TEST_REPORTER_ID: 73ce349159b6e9697d0c0a094ee7ee7e812762200f48696fba8eae814183d5fd
      with:
        coverageCommand: yarn test:coverage


  deploy_web_dev:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
    steps:
        - uses: actions/checkout@v3

        - name: Install dependencies
          working-directory: ./workspaces/app
          run: yarn

        - name: Package
          working-directory: ./workspaces/app
          run: yarn package

        - name: Deploy
          uses: reggionick/s3-deploy@v3
          with:
            folder: ./workspaces/app/dist
            bucket: s3://dev.spaceengineerspraisal.net
            bucket-region: eu-west-1
            dist-id: ${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION_ID }}
            invalidation: /
            delete-removed: true
            no-cache: true
            private: true
            filesToInclude: ".*/*,*/*,**"
