name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install-n-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-node_modules
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **/node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-yarn-node_modules-

    - name: Install dependencies
      if: steps.yarn-node_modules.outputs.cache-hit != 'true'
      run: yarn reinstall

    - uses: actions/cache@v2
      id: libs
      with:
        path: |
          **/lib
          **/*.tsbuildinfo
        key: ${{ runner.os }}-lib-${{ hashFiles('**/src') }}
        restore-keys: |
          ${{ runner.os }}-lib-

    - name: Build All
      run: yarn build --verbose
